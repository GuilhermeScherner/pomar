"""Adjust Base

Revision ID: cc4fc3c2dcc1
Revises: cf5783fd8087
Create Date: 2020-09-20 16:40:45.519230

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cc4fc3c2dcc1'
down_revision = 'cf5783fd8087'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_harvest_id', table_name='harvest')
    op.drop_index('ix_harvest_tree_id', table_name='harvest')
    op.drop_table('harvest')
    op.drop_index('ix_tree_id', table_name='tree')
    op.drop_table('tree')
    op.drop_index('ix_species_id', table_name='species')
    op.drop_index('ix_species_name', table_name='species')
    op.drop_table('species')
    op.drop_index('ix_tree_group_id', table_name='tree_group')
    op.drop_index('ix_tree_group_name', table_name='tree_group')
    op.drop_table('tree_group')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tree_group',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tree_group_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='tree_group_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_tree_group_name', 'tree_group', ['name'], unique=True)
    op.create_index('ix_tree_group_id', 'tree_group', ['id'], unique=False)
    op.create_table('species',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='species_pkey')
    )
    op.create_index('ix_species_name', 'species', ['name'], unique=True)
    op.create_index('ix_species_id', 'species', ['id'], unique=False)
    op.create_table('tree',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tree_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('specie', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['tree_group.id'], name='tree_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tree_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_tree_id', 'tree', ['id'], unique=False)
    op.create_table('harvest',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tree_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('info', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_harvest', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('weight', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tree_id'], ['tree.id'], name='harvest_tree_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='harvest_pkey')
    )
    op.create_index('ix_harvest_tree_id', 'harvest', ['tree_id'], unique=False)
    op.create_index('ix_harvest_id', 'harvest', ['id'], unique=False)
    # ### end Alembic commands ###
